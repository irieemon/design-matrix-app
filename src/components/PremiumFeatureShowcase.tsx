import React, { useRef, useEffect } from 'react'\nimport { Sparkles, Zap, TrendingUp, Shield, Cpu, Layers, Wand2 } from 'lucide-react'\nimport { usePremiumAnimations } from '../hooks/usePremiumAnimations'\n\ninterface PremiumFeature {\n  icon: React.ReactNode\n  title: string\n  description: string\n  color: string\n  benefits: string[]\n}\n\nconst PREMIUM_FEATURES: PremiumFeature[] = [\n  {\n    icon: <Zap className=\"w-6 h-6\" />,\n    title: \"React 19 Concurrent Features\",\n    description: \"Smooth, non-blocking AI processing with useTransition\",\n    color: \"from-blue-500 to-cyan-500\",\n    benefits: [\n      \"Seamless user interactions during AI processing\",\n      \"Advanced progress tracking with real-time updates\",\n      \"Intelligent loading states and stage indicators\"\n    ]\n  },\n  {\n    icon: <Cpu className=\"w-6 h-6\" />,\n    title: \"Web Workers Integration\",\n    description: \"Background AI analysis without blocking the main thread\",\n    color: \"from-purple-500 to-pink-500\",\n    benefits: [\n      \"Non-blocking heavy computations\",\n      \"Responsive UI during complex operations\",\n      \"Automatic fallback to main thread\"\n    ]\n  },\n  {\n    icon: <TrendingUp className=\"w-6 h-6\" />,\n    title: \"Optimistic Updates\",\n    description: \"Instant UI feedback with smart error recovery\",\n    color: \"from-green-500 to-emerald-500\",\n    benefits: [\n      \"Immediate visual feedback\",\n      \"Automatic rollback on errors\",\n      \"Intelligent retry mechanisms\"\n    ]\n  },\n  {\n    icon: <Shield className=\"w-6 h-6\" />,\n    title: \"Smart Error Recovery\",\n    description: \"Advanced error handling with automatic classification\",\n    color: \"from-orange-500 to-red-500\",\n    benefits: [\n      \"Automatic error type detection\",\n      \"Contextual recovery strategies\",\n      \"User-friendly error messages\"\n    ]\n  },\n  {\n    icon: <Wand2 className=\"w-6 h-6\" />,\n    title: \"AI-Powered Suggestions\",\n    description: \"Real-time intelligent suggestions and auto-completion\",\n    color: \"from-indigo-500 to-purple-500\",\n    benefits: [\n      \"Context-aware auto-completion\",\n      \"Smart pattern recognition\",\n      \"Business domain expertise\"\n    ]\n  },\n  {\n    icon: <Layers className=\"w-6 h-6\" />,\n    title: \"Premium Animations\",\n    description: \"Sophisticated micro-interactions and visual feedback\",\n    color: \"from-pink-500 to-rose-500\",\n    benefits: [\n      \"Smooth entrance and exit animations\",\n      \"Interactive hover effects\",\n      \"Accessibility-aware motion\"\n    ]\n  }\n]\n\ninterface PremiumFeatureShowcaseProps {\n  className?: string\n}\n\nconst PremiumFeatureShowcase: React.FC<PremiumFeatureShowcaseProps> = ({ className = '' }) => {\n  const { animate, staggerAnimation, animateOnScroll, createParticleBurst } = usePremiumAnimations()\n  const containerRef = useRef<HTMLDivElement>(null)\n  const headerRef = useRef<HTMLDivElement>(null)\n  const featuresRef = useRef<HTMLDivElement[]>([])\n\n  useEffect(() => {\n    // Animate header on mount\n    if (headerRef.current) {\n      animate(headerRef.current, 'fadeInUp', { delay: 200 })\n    }\n\n    // Stagger feature cards\n    if (featuresRef.current.length > 0) {\n      staggerAnimation(featuresRef.current, 'slideInRight', 150)\n    }\n\n    // Set up scroll animations\n    featuresRef.current.forEach((ref, index) => {\n      if (ref) {\n        animateOnScroll(ref, 'scaleIn', 0.2)\n      }\n    })\n  }, [])\n\n  const handleFeatureClick = (index: number) => {\n    const element = featuresRef.current[index]\n    if (element) {\n      // Create particle burst effect\n      createParticleBurst(element, {\n        count: 15,\n        colors: ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7'],\n        duration: 800\n      })\n      \n      // Bounce animation\n      animate(element, 'bounce')\n    }\n  }\n\n  return (\n    <div ref={containerRef} className={`bg-gradient-to-br from-slate-50 to-blue-50 rounded-3xl p-8 ${className}`}>\n      {/* Header */}\n      <div ref={headerRef} className=\"text-center mb-12\">\n        <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-purple-600 to-blue-600 rounded-2xl mb-6 shadow-lg\">\n          <Sparkles className=\"w-8 h-8 text-white\" />\n        </div>\n        <h2 className=\"text-4xl font-bold text-gray-900 mb-4\">\n          Premium AI Experience\n        </h2>\n        <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n          Experience the cutting-edge of AI-powered productivity with advanced concurrent processing, \n          intelligent suggestions, and premium interactions designed for the modern user.\n        </p>\n      </div>\n\n      {/* Features Grid */}\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n        {PREMIUM_FEATURES.map((feature, index) => (\n          <div\n            key={feature.title}\n            ref={(el) => el && (featuresRef.current[index] = el)}\n            className=\"group cursor-pointer\"\n            onClick={() => handleFeatureClick(index)}\n          >\n            <div className=\"h-full bg-white rounded-2xl p-6 shadow-sm hover:shadow-xl transition-all duration-300 border border-gray-100 hover:border-gray-200 transform hover:-translate-y-1\">\n              {/* Feature Icon */}\n              <div className={`inline-flex items-center justify-center w-12 h-12 bg-gradient-to-r ${feature.color} rounded-xl mb-4 text-white shadow-lg group-hover:scale-110 transition-transform duration-200`}>\n                {feature.icon}\n              </div>\n              \n              {/* Feature Content */}\n              <h3 className=\"text-xl font-bold text-gray-900 mb-3 group-hover:text-blue-600 transition-colors\">\n                {feature.title}\n              </h3>\n              \n              <p className=\"text-gray-600 mb-4 leading-relaxed\">\n                {feature.description}\n              </p>\n              \n              {/* Benefits List */}\n              <ul className=\"space-y-2\">\n                {feature.benefits.map((benefit, benefitIndex) => (\n                  <li key={benefitIndex} className=\"flex items-start space-x-2 text-sm text-gray-500\">\n                    <div className=\"w-1.5 h-1.5 bg-blue-400 rounded-full mt-2 flex-shrink-0\" />\n                    <span>{benefit}</span>\n                  </li>\n                ))}\n              </ul>\n              \n              {/* Hover Indicator */}\n              <div className=\"mt-4 pt-4 border-t border-gray-100\">\n                <div className=\"flex items-center justify-between text-sm\">\n                  <span className=\"text-gray-400\">Click to see effect</span>\n                  <div className=\"w-6 h-6 bg-gray-100 rounded-full flex items-center justify-center group-hover:bg-blue-100 transition-colors\">\n                    <Sparkles className=\"w-3 h-3 text-gray-400 group-hover:text-blue-500\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Bottom CTA */}\n      <div className=\"text-center mt-12\">\n        <div className=\"inline-flex items-center justify-center px-8 py-4 bg-gradient-to-r from-purple-600 to-blue-600 text-white font-semibold rounded-2xl shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-200 cursor-pointer group\">\n          <Sparkles className=\"w-5 h-5 mr-2 group-hover:animate-spin\" />\n          <span>Experience Premium AI Now</span>\n        </div>\n        <p className=\"text-sm text-gray-500 mt-3\">\n          All features are active and ready to enhance your productivity\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default PremiumFeatureShowcase"