/**
 * MATRIX PERFORMANCE OPTIMIZED CSS
 *
 * Enterprise-grade 60fps matrix interactions with GPU acceleration
 * Targets: <16ms hover response, smooth drag operations, minimal paint complexity
 */

/* ===== GPU ACCELERATION FUNDAMENTALS ===== */
:root {
  /* Performance-optimized timing functions */
  --timing-instant: cubic-bezier(0.4, 0.0, 1, 1); /* <16ms response */
  --timing-smooth: cubic-bezier(0.25, 0.46, 0.45, 0.94); /* 60fps animations */
  --timing-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55); /* Drag feedback */

  /* GPU-optimized transform values */
  --hover-lift: translate3d(0, -2px, 0) scale3d(1.02, 1.02, 1);
  --hover-scale: scale3d(1.02, 1.02, 1);
  --drag-lift: translate3d(0, -4px, 0) scale3d(1.05, 1.05, 1) rotateZ(1deg);

  /* Layer promotion thresholds */
  --gpu-layer-base: translate3d(0, 0, 0);
  --gpu-layer-hover: translate3d(0, 0, 1px);
  --gpu-layer-drag: translate3d(0, 0, 10px);
}

/* ===== CRITICAL GPU LAYER MANAGEMENT ===== */
.matrix-performance-layer {
  /* Force GPU layer creation for all interactive elements */
  transform: var(--gpu-layer-base);
  will-change: transform, opacity;
  backface-visibility: hidden;
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
}

.matrix-hover-layer {
  /* Promote to GPU layer only on interaction */
  transform: var(--gpu-layer-hover);
  transition: transform 16ms var(--timing-instant),
              opacity 16ms var(--timing-instant),
              filter 16ms var(--timing-instant);
}

.matrix-drag-layer {
  /* High-priority GPU layer for drag operations */
  transform: var(--gpu-layer-drag);
  will-change: transform, opacity, filter;
  isolation: isolate;
}

/* ===== OPTIMIZED MATRIX CONTAINER ===== */
.matrix-container {
  /* Reduced complexity gradient with GPU acceleration */
  background:
    linear-gradient(135deg,
      rgba(248, 250, 252, 0.95) 0%,
      rgba(239, 246, 255, 0.85) 50%,
      rgba(248, 250, 252, 0.95) 100%);

  /* Optimize backdrop filter for performance */
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);

  /* Enable hardware acceleration */
  transform: var(--gpu-layer-base);
  will-change: contents;

  /* Reduce paint complexity */
  border: 1px solid rgba(255, 255, 255, 0.25);
  border-radius: 0; /* Remove expensive border-radius */

  /* Optimized shadow with single layer */
  box-shadow: 0 8px 32px rgba(71, 85, 105, 0.08);
}

/* ===== HIGH-PERFORMANCE CARD INTERACTIONS ===== */
.idea-card-wrapper {
  /* Base GPU layer for cards */
  transform: var(--gpu-layer-base);
  will-change: transform;
  backface-visibility: hidden;

  /* Instant response transition */
  transition: transform 16ms var(--timing-instant);

  /* Force layer composition */
  isolation: isolate;
  z-index: var(--z-card-base);
}

.idea-card-wrapper:hover {
  /* Immediate GPU-accelerated hover response */
  transform: var(--hover-lift);
  z-index: var(--z-card-hover);

  /* No filter effects for maximum performance */
  /* filter: brightness(1.02) - REMOVED for <16ms response */
}

/* ===== DRAG PERFORMANCE OPTIMIZATION ===== */
.physics-drag {
  /* Pre-optimize for drag interactions */
  cursor: grab;
  touch-action: none;
  user-select: none;

  /* GPU preparation */
  transform: var(--gpu-layer-base);
  will-change: transform;
}

.physics-drag:active,
.physics-drag.dragging {
  cursor: grabbing;
  transform: var(--drag-lift);

  /* Maximum GPU acceleration during drag */
  will-change: transform, opacity;
  z-index: var(--z-card-dragging);
}

.drag-preview {
  /* Optimized drag preview */
  transform: var(--drag-lift);
  opacity: 0.9;
  pointer-events: none;

  /* Force independent layer */
  isolation: isolate;
  z-index: var(--z-card-dragging);

  /* Disable expensive effects during drag */
  backdrop-filter: none;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
}

/* ===== EFFICIENT HOVER STATES ===== */
.hover-optimized {
  transition: transform 16ms var(--timing-instant);
}

.hover-optimized:hover {
  transform: var(--hover-scale);
}

/* Specific hover classes with GPU optimization */
.hover\:scale-102:hover {
  transform: scale3d(1.02, 1.02, 1) !important;
  transition: transform 16ms var(--timing-instant) !important;
}

.hover\:scale-105:hover {
  transform: scale3d(1.05, 1.05, 1) !important;
  transition: transform 16ms var(--timing-instant) !important;
}

/* ===== MATRIX CANVAS PERFORMANCE ===== */
.matrix-canvas {
  /* Simplified background for performance */
  background: rgba(255, 255, 255, 0.1);
  border-radius: 0; /* Remove expensive border-radius */

  /* Optimize backdrop filter */
  backdrop-filter: blur(6px);
  -webkit-backdrop-filter: blur(6px);

  /* Enable hardware acceleration */
  transform: var(--gpu-layer-base);
  will-change: contents;

  /* Single-layer shadow */
  box-shadow: 0 4px 16px rgba(71, 85, 105, 0.06);
}

/* Remove expensive pseudo-elements during performance mode */
.matrix-canvas::before,
.matrix-canvas::after {
  display: none;
}

/* ===== OPTIMIZED ANIMATIONS ===== */
@keyframes matrix-pulse-optimized {
  0%, 100% {
    opacity: 0.6;
    transform: scale3d(1, 1, 1);
  }
  50% {
    opacity: 0.8;
    transform: scale3d(1.01, 1.01, 1);
  }
}

.matrix-center-pulse {
  animation: matrix-pulse-optimized 3s ease-in-out infinite;
  transform-origin: center;
  will-change: transform, opacity;
}

/* ===== BUTTON PERFORMANCE OPTIMIZATION ===== */
button.performance-optimized {
  transform: var(--gpu-layer-base);
  transition:
    transform 16ms var(--timing-instant),
    background-color 16ms var(--timing-instant),
    border-color 16ms var(--timing-instant);
  will-change: transform;
}

button.performance-optimized:hover:not([disabled]) {
  transform: translate3d(0, -1px, 0);
  background-color: rgba(59, 130, 246, 0.1);
  border-color: rgba(59, 130, 246, 0.3);
}

button.performance-optimized:active {
  transform: translate3d(0, 0, 0);
  transition-duration: 8ms;
}

/* ===== REDUCED MOTION OPTIMIZATIONS ===== */
@media (prefers-reduced-motion: reduce) {
  .matrix-performance-layer,
  .matrix-hover-layer,
  .matrix-drag-layer,
  .idea-card-wrapper,
  .physics-drag,
  button.performance-optimized {
    transition: none;
    animation: none;
    will-change: auto;
  }

  /* Keep minimal transforms for functionality */
  .idea-card-wrapper:hover {
    transform: translate3d(0, -1px, 0);
  }

  .physics-drag.dragging {
    transform: translate3d(0, -2px, 0) scale(1.02);
  }
}

/* ===== PERFORMANCE MONITORING HELPERS ===== */
.performance-debug {
  /* Add red border to identify non-accelerated elements */
  border: 1px solid red !important;
}

.performance-debug::before {
  content: 'NON-GPU';
  position: absolute;
  top: 0;
  left: 0;
  background: red;
  color: white;
  font-size: 10px;
  padding: 2px 4px;
  z-index: 10000;
}

/* GPU-accelerated elements get green border */
.gpu-accelerated.performance-debug {
  border-color: green !important;
}

.gpu-accelerated.performance-debug::before {
  content: 'GPU';
  background: green;
}

/* ===== CRITICAL PERFORMANCE FIXES ===== */

/* Disable expensive operations during interactions */
.matrix-container:hover .backdrop-blur,
.matrix-container:hover .gradient-complex {
  backdrop-filter: none;
  background-image: none;
}

/* Optimize z-index changes for smooth layering */
.z-index-optimized {
  transition: z-index 0ms; /* Immediate z-index changes */
}

/* Prevent layout thrashing during drag */
.prevent-layout-thrash {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

/* ===== RESPONSIVE PERFORMANCE ===== */
@media (max-width: 768px) {
  /* Reduce complexity on mobile */
  .matrix-container {
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
  }

  .matrix-canvas {
    backdrop-filter: blur(3px);
    -webkit-backdrop-filter: blur(3px);
  }

  /* Faster transitions on mobile */
  .idea-card-wrapper:hover {
    transform: translate3d(0, -1px, 0) scale3d(1.01, 1.01, 1);
  }
}

@media (min-width: 1920px) {
  /* Enhanced performance on high-end displays */
  .matrix-container {
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
  }

  .idea-card-wrapper:hover {
    transform: var(--hover-lift) scale3d(1.03, 1.03, 1);
  }
}

/* ===== FRAME RATE OPTIMIZATION ===== */
.fps-60-guaranteed {
  /* Guarantee 60fps by preventing expensive operations */
  will-change: transform;
  transform: var(--gpu-layer-base);
  animation-fill-mode: both;
  animation-duration: 16.67ms; /* Exactly 60fps timing */
}

/* Apply performance optimizations to matrix cards */
.matrix-cards-container .idea-card-wrapper {
  /* Extend performance optimizations to all cards */
  @extend .matrix-performance-layer;
  @extend .hover-optimized;
}

/* ===== PAINT COMPLEXITY REDUCTION ===== */
.paint-optimized {
  /* Reduce paint complexity */
  contain: layout style paint;
  content-visibility: auto;
  contain-intrinsic-size: 200px 150px;
}

/* Apply paint optimization to card containers */
.matrix-cards-container {
  @extend .paint-optimized;
}

/* ===== MEMORY EFFICIENCY ===== */
.memory-efficient {
  /* Prevent memory leaks in GPU layers */
  will-change: auto; /* Reset when not needed */
}

.memory-efficient.interacting {
  will-change: transform, opacity;
}

/* Auto-cleanup for GPU memory */
.idea-card-wrapper:not(:hover):not(.dragging) {
  @extend .memory-efficient;
}